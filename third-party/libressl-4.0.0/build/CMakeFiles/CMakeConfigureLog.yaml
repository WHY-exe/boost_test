
---
events:
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineSystem.cmake:233 (message)"
      - "CMakeLists.txt:6 (project)"
    message: |
      The system is: Windows - 10.0.26100 - AMD64
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:17 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:64 (__determine_compiler_id_test)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCCompiler.cmake:123 (CMAKE_DETERMINE_COMPILER_ID)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Compiling the C compiler identification source file "CMakeCCompilerId.c" succeeded.
      Compiler:  
      Build flags: 
      Id flags:  
      
      The output was:
      0
      适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
      生成启动时间为 2025/1/11 13:00:49。
      
      节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\3.28.0-msvc1\\CompilerIdC\\CompilerIdC.vcxproj”(默认目标)。
      PrepareForBuild:
        正在创建目录“Debug\\”。
        已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
        正在创建目录“Debug\\CompilerIdC.tlog\\”。
      InitializeBuildStatus:
        正在创建“Debug\\CompilerIdC.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
        正在对“Debug\\CompilerIdC.tlog\\unsuccessfulbuild”执行 Touch 任务。
      ClCompile:
        C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /nologo /W0 /WX- /diagnostics:column /Od /D _MBCS /Gm- /EHsc /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"Debug\\\\" /Fd"Debug\\vc143.pdb" /external:W0 /Gd /TC /FC /errorReport:queue CMakeCCompilerId.c
        CMakeCCompilerId.c
      Link:
        C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:".\\CompilerIdC.exe" /INCREMENTAL:NO /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /PDB:".\\CompilerIdC.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:".\\CompilerIdC.lib" /MACHINE:X64 Debug\\CMakeCCompilerId.obj
        CompilerIdC.vcxproj -> C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\3.28.0-msvc1\\CompilerIdC\\CompilerIdC.exe
      PostBuildEvent:
        for %%i in (cl.exe) do @echo CMAKE_C_COMPILER=%%~$PATH:i
        :VCEnd
        CMAKE_C_COMPILER=C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\Hostx64\\x64\\cl.exe
      FinalizeBuildStatus:
        正在删除文件“Debug\\CompilerIdC.tlog\\unsuccessfulbuild”。
        正在对“Debug\\CompilerIdC.tlog\\CompilerIdC.lastbuildstate”执行 Touch 任务。
      已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\3.28.0-msvc1\\CompilerIdC\\CompilerIdC.vcxproj”(默认目标)的操作。
      
      已成功生成。
          0 个警告
          0 个错误
      
      已用时间 00:00:01.28
      
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.exe"
      
      Compilation of the C compiler identification source "CMakeCCompilerId.c" produced "CompilerIdC.vcxproj"
      
      The C compiler identification is MSVC, found in:
        C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/3.28.0-msvc1/CompilerIdC/CompilerIdC.exe
      
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is AppleClang using "--version" did not match "(Apple (clang|LLVM) version)":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is Clang using "--version" did not match "(clang version)":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is ARMClang using "--version" did not match "armclang":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is OrangeC using "--version" did not match "occ \\(OrangeC\\) Version":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is HP using "-V" did not match "HP C":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 error D8004 :“/V”需要参数
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is Intel using "--version" did not match "(ICC)":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is IntelLLVM using "--version" did not match "(Intel[^
      ]+oneAPI)":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“--version”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is SunPro using "-V" did not match "Sun C":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 error D8004 :“/V”需要参数
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is XL using "-qversion" did not match "XL C":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
      cl: 命令行 warning D9002 :忽略未知选项“-qversion”
      cl: 命令行 error D8003 :缺少源文件名
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1131 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "CMakeLists.txt:6 (project)"
    message: |
      Checking whether the ASM compiler is MSVC using "-?" matched "Microsoft":
      用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
      版权所有(C) Microsoft Corporation。保留所有权利。
      
                   C/C++ 编译器选项
      
      
                     -优化-
      
      /O1 最大优化(优选空间)                  /O2 最大优化(优选速度)
      /Ob<n> 内联扩展(默认 n=0)               /Od 禁用优化(默认)
      /Og 启用全局优化                        /Oi[-] 启用内部函数
      /Os 优选代码空间                        /Ot 优选代码速度
      /Ox 优化(优选速度)                      
      /favor:<blend|AMD64|INTEL64|ATOM> 选择优化所针对的处理器，为以下值之一:
         blend - 针对几种不同 x64 处理器的优化组合
         AMD64 - 64 位 AMD 处理器
         INTEL64 - Intel(R)64 架构处理器
         ATOM - Intel(R) Atom(TM) 处理器
      
                     -代码生成-
      
      /Gu[-] 确保 distinct 函数具有非重复地址 /Gw[-] 分隔链接器的全局变量
      /GF 启用只读字符串池                    /Gm[-] 启用最小重新生成
      /Gy[-] 分隔链接器函数                   /GS[-] 启用安全检查
      /GR[-] 启用 C++ RTTI                    /GX[-] 启用 C++ EH (与 /EHsc 相同)
      /guard:cf[-] 启用 CFG (控制流保护)      /guard:ehcont[-] 启用 EH 继续元数据(CET)
      /EHs 启用 C++ EH (没有 SEH 异常)        /EHa 启用 C++ EH (w/ SEH 异常)
      /EHc 外部 "C" 默认为 nothrow            /EHr 始终生成 noexcept 运行时终止检查
      /fp:<contract|except[-]|fast|precise|strict> 选择浮点模型:
         协定 - 生成代码时考虑浮点收缩
         except[-] - 在生成代码时考虑浮点异常
         fast - "fast" 浮点模型；结果可预测性比较低
         precise - "precise" 浮点模型；结果可预测
         strict - "strict" 浮点模型(意味着 /fp:except)
      即使使用 /fp:except，/Qfast_transcendentals 也生成内联内部 FP
      /Qspectre[-] 对 CVE 2017-5753 启用缓解措施
      /Qpar[-] 启用并行代码生成               
      /Qpar-report:1 自动并行化诊断；指示已并行化循环
      /Qpar-report:2 自动并行化诊断；指示未并行化循环
      /Qvec-report:1 自动向量化诊断；指示已向量化循环
      /Qvec-report:2 自动向量化诊断；指示未向量化循环
      /GL[-] 启用链接时代码生成               
      /volatile:<iso|ms> 选择可变模型:
         iso - Acquire/release 语义对可变访问不一定有效
         ms - Acquire/release 语义对可变访问一定有效
      /GA 为 Windows 应用程序进行优化         /Ge 对所有函数强制堆栈检查
      /Gs[num] 控制堆栈检查调用               /Gh 启用 _penter 函数调用
      /GH 启用 _pexit 函数调用                /GT 生成纤程安全 TLS 访问
      /RTC1 启用快速检查(/RTCsu)              /RTCc 转换为较小的类型检查
      /RTCs 堆栈帧运行时检查                  /RTCu 未初始化的局部用法检查
      /clr[:option] 为公共语言运行时编译，其中 option 是:
         pure : 生成仅包含 IL 的输出文件(没有本机可执行代码)
         safe : 生成只包含 IL 的可验证输出文件
         netcore : 生成以 .NET Core 运行时为目标的程序集
         noAssembly : 不生成程序集
         nostdlib : 搜索程序集时忽略系统 .NET Framework 目录
         nostdimport : 不隐式导入任何必需的程序集
         initialAppDomain : 启用 Visual C++ 2002 的初始 AppDomain 行为
         implicitKeepAlive- : 关闭 System::GC::KeepAlive(this)的隐式值
      /fsanitize=解决启用地址消毒代码生成     
      /homeparams 强制将传入寄存器的参数写入到堆栈中
      /GZ 启用堆栈检查(/RTCs)                 /Gv __vectorcall 调用约定
      /arch:<AVX|AVX2|AVX512> 最小 CPU 架构要求，以下之一:
        AVX - 允许使用支持 AVX 的 CPU 可用的指令
        AVX2 - 允许使用支持 AVX2 的 CPU 可用的指令
        AVX512 - 允许使用支持 AVX-512 的 CPU 可用的指令
      /QIntel-jcc-erratum 为 Intel JCC Erratum 启用缓解措施
      /Qspectre-load 对加载内存的所有指令启用 spectre 缓解措施
      /Qspectre-load-cf 对加载内存的所有控制流指令启用 spectre 缓解措施
      /Qspectre-jmp[-] 为无条件跳转指令启用 Spectre 缓解
      /fpcvt:<IA|BC> 无符号整数转换兼容性为 FP
        IA - 与 VCVTTSD2USI 指令兼容的结果
        BC - 与 VS2017 及更低版本的编译器兼容的结果
      /jumptablerdata 在 .rdata 部分中放置 switch case 语句的跳转表
      
                     -输出文件-
      
      /Fa[file] 命名程序集列表文件            /FA[scu] 配置程序集列表
      /Fd[file] 命名 .PDB 文件                /Fe<file> 命名可执行文件
      /Fm[file] 命名映射文件                  /Fo<file> 命名对象文件
      /Fp<file> 命名预编译头文件              /Fr[file] 命名源浏览器文件
      /FR[file] 命名扩展 .SBR 文件            /Fi[file] 命名预处理的文件
      /Fd: <file> 命名 .PDB 文件              /Fe: <file> 命名可执行文件
      /Fm: <file> 命名映射文件                /Fo: <file> 命名对象文件
      /Fp: <file> 命名 .PCH 文件              /FR: <file> 命名扩展 .SBR 文件
      /Fi: <file> 命名预处理的文件            /Ft<dir> 为 #import 生成的头文件的地址
      /doc[file] 处理 XML 文档注释，并可选择命名 .xdc 文件
      
                     -预处理器-
      
      /AI<dir> 添加到程序集搜索路径           /FU<file> 导入 .NET 程序集/模块
      /FU:asFriend<file> 将 .NET 程序集/模块导入为友元
      /C 不抽出注释                           /D<name>{=|#}<text> 定义宏
      /E 预处理到 stdout                      /EP 预处理到 stdout，无行号
      /P 预处理到文件                         /Fx 将插入的代码合并到文件中
      /FI<file> 命名强制包含文件              /U<name> 移除预定义的宏
      /u 移除所有预定义的宏                   /I<dir> 添加到包含搜索路径
      /X 忽略“标准位置”                     /PH 在预处理时生成 #pragma file_hash
      /PD 打印所有宏定义                      
      
                      -语言-
      
      /std:<c++14|c++17|c++20|c++latest> C++ 标准版
          c++14 - ISO/IEC 14882:2014 (默认值)
          c++17 - ISO/IEC 14882:2017
          c++20 - ISO/IEC 14882:2020
          c++latest - 最新草案标准(功能集可能更改)
      /std:<c11|c17|clatest> C 标准版本
         c11 - ISO/IEC 9899:2011
         c17 - ISO/IEC 9899:2018
         clatest - 最新草稿标准(功能集可能会更改)
      /permissive[-] 启用一些不符合格式的代码进行编译
                    (功能集可能会更改)(在 C++20 及更高版本中默认关闭)
      /Ze(已弃用)启用扩展(默认值)             /Za 禁用扩展(不建议用于 C++)
      /ZW 启用 WinRT 语言扩展                 /Zs 只进行语法检查
      /await 启用可恢复函数扩展
      /await:strict 启用使用早期语言版本的标准 C++20 协同例程支持
      /constexpr:depth<N>     constexpr 评估的递归深度限制(默认值: 512)
      /constexpr:backtrace<N> 在诊断中显示 N constexpr 评估(默认值: 10)
      /constexpr:steps<N>     在 N 个步骤后终止 constexpr 评估(默认值: 1048576)
      /Zi 启用调试信息                        /Z7 启用旧式调试信息
      /Zo[-] 为优化的代码生成更丰富的调试信息(默认开启)
      /ZH:[MD5|SHA1|SHA_256] 哈希算法，用于在调试信息中计算文件校验和(默认值: SHA_256)
      /Zp[n] 在 n 字节边界上包装结构          /Zl 省略 .OBJ 中的默认库名
      /vd{0|1|2} 禁用/启用 vtordisp           /vm<x> 指向成员的指针类型
      /Zc:arg1[,arg2] 语言一致性，这里的参数可以是:
       forScope[-]      对范围规则强制使用标准 C++
       wchar_t[-]      wchar_t 是本机类型，不是 typedef
       auto[-]               对 auto 强制使用新的标准 C++ 含义
       trigraphs[-]          启用三元祖(默认关闭)
       rvalueCast[-]     强制实施标准 C++ 显式类型转换规则
                             (在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       strictStrings[-]      禁用字符串文本到 [char|wchar_t]*
                             转换(在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       implicitNoexcept[-]  在必需的函数上启用隐式 noexcept
       threadSafeInit[-]   启用线程安全的本地静态初始化
       inline[-]             删除未引用的函数或数据，如果其为
                             COMDAT 或仅具有内部链接(默认情况下关闭)
       sizedDealloc[-]       启用 C++14 全局大小的解除分配
                             函数(默认启用)
       throwingNew[-]        假设运算符 new 在故障时引发(默认关闭)
       referenceBinding[-]   临时，不会绑定到非常量
                             值引用(默认情况下为 C++20 或更高版本，由 /permissive-隐含)
       twoPhase-             禁用两阶段名称查找
       ternary[-]            对条件运算符强制执行 C++11 规则
                             (在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       noexceptTypes[-]      强制执行 C++17 noexcept 规则(在 C++17 或更高版本中默认开启)
       alignedNew[-]         对动态分配的对象启用 C++17 对齐方式(默认开启)
       hiddenFriend[-]       强制执行标准 C++ 隐藏友元规则
                             (在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       externC[-]            对 'extern "C"' 函数强制执行标准 C++ 规则
                             (在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       lambda[-]             使用更新的 lambda 处理器提供更好的 lambda 支持
                             (在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       tlsGuards[-]          生成 TLS 变量初始化的运行时检查(默认情况下启用)
       zeroSizeArrayNew[-]   针对大小为零的对象数组的调用对象 new/delete (默认启用)
       static_assert[-]      严格处理 "static_assert" (在 C++20 或更高版本中默认处于打开状态，
                             由 /permissive- 隐含)
       gotoScope[-]          无法跳过变量的初始化(由 /permissive- 暗示)
       templateScope[-]      强制执行标准 C++ 模板参数阴影规则
       enumTypes[-]          启用标准 C++ 基础枚举类型(默认情况下关闭)
       checkGwOdr[-]         强制实施标准 C++ 一个定义规则违反
                             启用 /Gw 时(默认关闭)
       nrvo[-]               启用可选复制和移动消除(在 C++20 或更高版本中默认开启，
                             由 /permissive 或 /O2 隐含)
       __STDC__在 C 中将 __STDC__ 定义为 1
       __cplusplus[-]        __cplusplus 宏报告支持的 C++ 标准(默认关闭)
       char8_t[-]            将 C++20 本机`u8`文本支持启用为`const char8_t`
                             (默认情况下为 C++20 或更高版本)
       externConstexpr[-]    为 C++ 中的 constexpr 变量启用外部链接
                             (在 C++20 或更高版本中默认启用，由 /permissive-隐含)
       preprocessor[-]       在 C/C++ 中启用标准一致性预处理器
                             (默认情况下为 C11 或更高版本)
      /ZI 启用“编辑并继续”调试信息          /openmp 启用 OpenMP 2.0 语言扩展
      /openmp:experimental 会启用 OpenMP 2.0 语言扩展并选择 OpenMP 3.0+ 语言扩展
      使用 LLVM 运行时 /openmp:llvm OpenMP 语言扩展
      
                     - 杂项 -
      
      @<file> 选项响应文件                    /?, /help 打印此帮助消息
      /bigobj 生成扩展的对象格式              /c 只编译，不链接
      /errorReport:option 已弃用。向 Microsoft 报告内部编译器错误
         none - 不发送报告
         prompt - 提示立即发送报告
         queue - 在下一次管理员登录时，提示发送报告(默认)
         send - 自动发送报告
      /FC 诊断中使用完整路径名                /H<num> 最大外部名称长度
      /J 默认 char 类型是 unsigned            /MP[n] 最多使用“n”个进程进行编译
      /nologo 取消显示版权信息                /showIncludes 显示包含文件名
      /Tc<source file> 将文件编译为 .c        /Tp<source file> 将文件编译为 .cpp
      /TC 将所有文件编译为 .c                 /TP 将所有文件编译为 .cpp
      /V<string> 设置版本字符串               /Yc[file] 创建 .PCH 文件
      /Yd 将调试信息放在每个 .OBJ 中          /Yl[sym] 为调试库插入 .PCH 引用
      /Yu[file] 使用 .PCH 文件                /Y- 禁用所有 PCH 选项
      /Zm<n> 最大内存分配(默认值的百分比)     /FS 强制使用 MSPDBSRV.EXE
      /source-charset:<iana-name>|.nnnn 集源字符集
      /execution-charset:<iana-name>|.nnnn 集执行字符集
      /utf-8 集源和到 UTF-8 的执行字符集      
      /validate-charset[-] 验证 UTF-8 文件是否只有合法字符
      /fastfail[-] 启用 fast-fail 模式        /JMC[-] 启用本机“仅我的代码”
      /presetPadding[-] 将基于堆栈的类类型的填充初始化为零
      /volatileMetadata[-] 对易失存储器访问生成元数据
      /sourcelink [file] 包含源链接信息的文件 
      
                      -链接-
      
      /LD 创建 .DLL                           /LDd 创建 .DLL 调试库
      /LN 创建 .netmodule                     /F<num> 设置堆栈大小
      /link [链接器选项和库]                  /MD 与 MSVCRT.LIB 链接
      /MT 与 LIBCMT.LIB 链接                  /MDd 与 MSVCRTD.LIB 调试库链接
      /MTd 与 LIBCMTD.LIB 调试库链接          
      
                     -代码分析-
      
      /analyze[-] 启用本机分析                /analyze:quiet[-] 没有对控制台的警告
      /analyze:log<name> 对文件的警告         /analyze:autolog Log to *.pftlog
      /analyze:autolog:ext<ext> Log to *.<ext>/analyze:autolog- 无日志文件
      /analyze:WX- 警告不严重                 /analyze:stacksize<num> 最大堆栈帧
      /analyze:max_paths<num> 最大路径        /analyze:only Analyze, no code gen
      
                                    -诊断-
      
      /diagnostics:<args,...> 控制诊断消息的格式:
                   传统型 - 保留之前的格式
                   列[-] - 打印列信息
                   脱字号[-] - 打印列和源的指示行
      /Wall 启用所有警告                      /w   禁用所有警告
      /W<n> 设置警告等级(默认 n=1)            
      /Wv:xx[.yy[.zzzzz]] 禁用在 xx.yy.zzzzz 版本后引入的警告功能
      /WX 将警告视为错误                      /WL 启用单行诊断
      /wd<n> 禁用警告 n                       /we<n> 将警告 n 视为错误
      /wo<n> 发出一次警告 n                   /w<l><n> 为 n 设置警告等级 1-4
      /external:I <path>      - 外部标头的位置
      /external:env:<var>    - 外部标头位置的环境变量
      /external:anglebrackets - 将所有通过 <> 包含的标头视为外部
      /external:W<n>          - 外部标头的警告等级
      /external:templates[-]  - 跨模板实例化链评估警告级别
      /sdl 支持其他安全功能和警告             
      /选项: 严格无法识别的编译器选项是一个错误
      
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerABI.cmake:57 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeTestCCompiler.cmake:26 (CMAKE_DETERMINE_COMPILER_ABI)"
      - "CMakeLists.txt:6 (project)"
    checks:
      - "Detecting C compiler ABI info"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ez08yu"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ez08yu"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
    buildResult:
      variable: "CMAKE_C_ABI_COMPILED"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ez08yu'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_239e6.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:53。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ez08yu\\cmTC_239e6.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_239e6.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ez08yu\\Debug\\”。
          正在创建目录“cmTC_239e6.dir\\Debug\\cmTC_239e6.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_239e6.dir\\Debug\\cmTC_239e6.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_239e6.dir\\Debug\\cmTC_239e6.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_239e6.dir\\Debug\\\\" /Fd"cmTC_239e6.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\share\\cmake-3.28\\Modules\\CMakeCCompilerABI.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W1 /WX- /diagnostics:column /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_239e6.dir\\Debug\\\\" /Fd"cmTC_239e6.dir\\Debug\\vc143.pdb" /external:W1 /Gd /TC /errorReport:queue "C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\Common7\\IDE\\CommonExtensions\\Microsoft\\CMake\\CMake\\share\\cmake-3.28\\Modules\\CMakeCCompilerABI.c"
          CMakeCCompilerABI.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ez08yu\\Debug\\cmTC_239e6.exe" /INCREMENTAL /ILK:"cmTC_239e6.dir\\Debug\\cmTC_239e6.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ez08yu/Debug/cmTC_239e6.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ez08yu/Debug/cmTC_239e6.lib" /MACHINE:X64  /machine:x64 cmTC_239e6.dir\\Debug\\CMakeCCompilerABI.obj
          cmTC_239e6.vcxproj -> C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ez08yu\\Debug\\cmTC_239e6.exe
        FinalizeBuildStatus:
          正在删除文件“cmTC_239e6.dir\\Debug\\cmTC_239e6.tlog\\unsuccessfulbuild”。
          正在对“cmTC_239e6.dir\\Debug\\cmTC_239e6.tlog\\cmTC_239e6.lastbuildstate”执行 Touch 任务。
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ez08yu\\cmTC_239e6.vcxproj”(默认目标)的操作。
        
        已成功生成。
            0 个警告
            0 个错误
        
        已用时间 00:00:01.11
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckFunctionExists.cmake:86 (try_compile)"
      - "CMakeLists.txt:204 (check_function_exists)"
    checks:
      - "Looking for asprintf"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-rljyz7"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-rljyz7"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_ASPRINTF"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-rljyz7'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_a89aa.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:54。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_a89aa.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\Debug\\”。
          正在创建目录“cmTC_a89aa.dir\\Debug\\cmTC_a89aa.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_a89aa.dir\\Debug\\cmTC_a89aa.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_a89aa.dir\\Debug\\cmTC_a89aa.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=asprintf /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_a89aa.dir\\Debug\\\\" /Fd"cmTC_a89aa.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\CheckFunctionExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=asprintf /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_a89aa.dir\\Debug\\\\" /Fd"cmTC_a89aa.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\CheckFunctionExists.c"
          CheckFunctionExists.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\Debug\\cmTC_a89aa.exe" /INCREMENTAL /ILK:"cmTC_a89aa.dir\\Debug\\cmTC_a89aa.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-rljyz7/Debug/cmTC_a89aa.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-rljyz7/Debug/cmTC_a89aa.lib" /MACHINE:X64  /machine:x64 cmTC_a89aa.dir\\Debug\\CheckFunctionExists.obj
        CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 asprintf，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj]
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\Debug\\cmTC_a89aa.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj”(默认目标) (1) ->
        (Link 目标) -> 
          CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 asprintf，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj]
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\Debug\\cmTC_a89aa.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-rljyz7\\cmTC_a89aa.vcxproj]
        
            0 个警告
            2 个错误
        
        已用时间 00:00:01.03
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:209 (check_symbol_exists)"
    checks:
      - "Looking for getopt"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-njtsqn"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-njtsqn"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_GETOPT"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-njtsqn'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_b3cd1.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:55。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\cmTC_b3cd1.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_b3cd1.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\Debug\\”。
          正在创建目录“cmTC_b3cd1.dir\\Debug\\cmTC_b3cd1.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_b3cd1.dir\\Debug\\cmTC_b3cd1.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_b3cd1.dir\\Debug\\cmTC_b3cd1.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b3cd1.dir\\Debug\\\\" /Fd"cmTC_b3cd1.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b3cd1.dir\\Debug\\\\" /Fd"cmTC_b3cd1.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “unistd.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\cmTC_b3cd1.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\cmTC_b3cd1.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\cmTC_b3cd1.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “unistd.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-njtsqn\\cmTC_b3cd1.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.57
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:214 (check_symbol_exists)"
    checks:
      - "Looking for reallocarray"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-lyhmcr"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-lyhmcr"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_REALLOCARRAY"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-lyhmcr'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_90028.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:56。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\cmTC_90028.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_90028.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\Debug\\”。
          正在创建目录“cmTC_90028.dir\\Debug\\cmTC_90028.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_90028.dir\\Debug\\cmTC_90028.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_90028.dir\\Debug\\cmTC_90028.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_90028.dir\\Debug\\\\" /Fd"cmTC_90028.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_90028.dir\\Debug\\\\" /Fd"cmTC_90028.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\CheckSymbolExists.c(8,31): error C2065: “reallocarray”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\cmTC_90028.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\cmTC_90028.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\cmTC_90028.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\CheckSymbolExists.c(8,31): error C2065: “reallocarray”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-lyhmcr\\cmTC_90028.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.53
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckFunctionExists.cmake:86 (try_compile)"
      - "CMakeLists.txt:220 (check_function_exists)"
    checks:
      - "Looking for strcasecmp"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zrqvm6"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zrqvm6"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STRCASECMP"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zrqvm6'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_ecd8b.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:57。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_ecd8b.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\Debug\\”。
          正在创建目录“cmTC_ecd8b.dir\\Debug\\cmTC_ecd8b.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_ecd8b.dir\\Debug\\cmTC_ecd8b.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_ecd8b.dir\\Debug\\cmTC_ecd8b.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=strcasecmp /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_ecd8b.dir\\Debug\\\\" /Fd"cmTC_ecd8b.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\CheckFunctionExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=strcasecmp /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_ecd8b.dir\\Debug\\\\" /Fd"cmTC_ecd8b.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\CheckFunctionExists.c"
          CheckFunctionExists.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\Debug\\cmTC_ecd8b.exe" /INCREMENTAL /ILK:"cmTC_ecd8b.dir\\Debug\\cmTC_ecd8b.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zrqvm6/Debug/cmTC_ecd8b.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zrqvm6/Debug/cmTC_ecd8b.lib" /MACHINE:X64  /machine:x64 cmTC_ecd8b.dir\\Debug\\CheckFunctionExists.obj
        CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 strcasecmp，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj]
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\Debug\\cmTC_ecd8b.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj”(默认目标) (1) ->
        (Link 目标) -> 
          CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 strcasecmp，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj]
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\Debug\\cmTC_ecd8b.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zrqvm6\\cmTC_ecd8b.vcxproj]
        
            0 个警告
            2 个错误
        
        已用时间 00:00:01.07
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:227 (check_symbol_exists)"
    checks:
      - "Looking for strlcat"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-y2yxdt"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-y2yxdt"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STRLCAT"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-y2yxdt'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_c59bc.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:59。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\cmTC_c59bc.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_c59bc.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\Debug\\”。
          正在创建目录“cmTC_c59bc.dir\\Debug\\cmTC_c59bc.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_c59bc.dir\\Debug\\cmTC_c59bc.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_c59bc.dir\\Debug\\cmTC_c59bc.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_c59bc.dir\\Debug\\\\" /Fd"cmTC_c59bc.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_c59bc.dir\\Debug\\\\" /Fd"cmTC_c59bc.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\CheckSymbolExists.c(8,26): error C2065: “strlcat”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\cmTC_c59bc.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\cmTC_c59bc.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\cmTC_c59bc.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\CheckSymbolExists.c(8,26): error C2065: “strlcat”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-y2yxdt\\cmTC_c59bc.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.55
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:232 (check_symbol_exists)"
    checks:
      - "Looking for strlcpy"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wde4ot"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wde4ot"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STRLCPY"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wde4ot'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_b7bc3.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:00:59。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\cmTC_b7bc3.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_b7bc3.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\Debug\\”。
          正在创建目录“cmTC_b7bc3.dir\\Debug\\cmTC_b7bc3.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_b7bc3.dir\\Debug\\cmTC_b7bc3.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_b7bc3.dir\\Debug\\cmTC_b7bc3.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b7bc3.dir\\Debug\\\\" /Fd"cmTC_b7bc3.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b7bc3.dir\\Debug\\\\" /Fd"cmTC_b7bc3.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\CheckSymbolExists.c(8,26): error C2065: “strlcpy”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\cmTC_b7bc3.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\cmTC_b7bc3.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\cmTC_b7bc3.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\CheckSymbolExists.c(8,26): error C2065: “strlcpy”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wde4ot\\cmTC_b7bc3.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.51
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:238 (check_symbol_exists)"
    checks:
      - "Looking for strndup"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-l2igr1"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-l2igr1"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STRNDUP"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-l2igr1'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_b3261.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:00。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\cmTC_b3261.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_b3261.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\Debug\\”。
          正在创建目录“cmTC_b3261.dir\\Debug\\cmTC_b3261.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_b3261.dir\\Debug\\cmTC_b3261.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_b3261.dir\\Debug\\cmTC_b3261.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b3261.dir\\Debug\\\\" /Fd"cmTC_b3261.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_b3261.dir\\Debug\\\\" /Fd"cmTC_b3261.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\CheckSymbolExists.c(8,26): error C2065: “strndup”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\cmTC_b3261.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\cmTC_b3261.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\cmTC_b3261.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\CheckSymbolExists.c(8,26): error C2065: “strndup”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-l2igr1\\cmTC_b3261.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.54
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:253 (check_symbol_exists)"
    checks:
      - "Looking for strsep"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ofwazb"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ofwazb"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STRSEP"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-ofwazb'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_4c864.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:01。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\cmTC_4c864.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_4c864.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\Debug\\”。
          正在创建目录“cmTC_4c864.dir\\Debug\\cmTC_4c864.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_4c864.dir\\Debug\\cmTC_4c864.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_4c864.dir\\Debug\\cmTC_4c864.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_4c864.dir\\Debug\\\\" /Fd"cmTC_4c864.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_4c864.dir\\Debug\\\\" /Fd"cmTC_4c864.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\CheckSymbolExists.c(8,25): error C2065: “strsep”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\cmTC_4c864.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\cmTC_4c864.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\cmTC_4c864.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\CheckSymbolExists.c(8,25): error C2065: “strsep”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-ofwazb\\cmTC_4c864.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.50
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:258 (check_symbol_exists)"
    checks:
      - "Looking for strtonum"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-da3ii4"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-da3ii4"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STRTONUM"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-da3ii4'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_d7070.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:02。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\cmTC_d7070.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_d7070.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\Debug\\”。
          正在创建目录“cmTC_d7070.dir\\Debug\\cmTC_d7070.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_d7070.dir\\Debug\\cmTC_d7070.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_d7070.dir\\Debug\\cmTC_d7070.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d7070.dir\\Debug\\\\" /Fd"cmTC_d7070.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d7070.dir\\Debug\\\\" /Fd"cmTC_d7070.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\CheckSymbolExists.c(8,27): error C2065: “strtonum”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\cmTC_d7070.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\cmTC_d7070.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\cmTC_d7070.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\CheckSymbolExists.c(8,27): error C2065: “strtonum”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-da3ii4\\cmTC_d7070.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.50
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:263 (check_symbol_exists)"
    checks:
      - "Looking for arc4random_buf"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-2b56tj"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-2b56tj"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_ARC4RANDOM_BUF"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-2b56tj'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_0b27a.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:03。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\cmTC_0b27a.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_0b27a.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\Debug\\”。
          正在创建目录“cmTC_0b27a.dir\\Debug\\cmTC_0b27a.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_0b27a.dir\\Debug\\cmTC_0b27a.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_0b27a.dir\\Debug\\cmTC_0b27a.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_0b27a.dir\\Debug\\\\" /Fd"cmTC_0b27a.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_0b27a.dir\\Debug\\\\" /Fd"cmTC_0b27a.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\CheckSymbolExists.c(8,33): error C2065: “arc4random_buf”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\cmTC_0b27a.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\cmTC_0b27a.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\cmTC_0b27a.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\CheckSymbolExists.c(8,33): error C2065: “arc4random_buf”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-2b56tj\\cmTC_0b27a.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.60
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:268 (check_symbol_exists)"
    checks:
      - "Looking for arc4random_uniform"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-d8uyez"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-d8uyez"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_ARC4RANDOM_UNIFORM"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-d8uyez'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_fea20.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:03。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\cmTC_fea20.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_fea20.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\Debug\\”。
          正在创建目录“cmTC_fea20.dir\\Debug\\cmTC_fea20.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_fea20.dir\\Debug\\cmTC_fea20.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_fea20.dir\\Debug\\cmTC_fea20.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_fea20.dir\\Debug\\\\" /Fd"cmTC_fea20.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_fea20.dir\\Debug\\\\" /Fd"cmTC_fea20.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\CheckSymbolExists.c(8,37): error C2065: “arc4random_uniform”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\cmTC_fea20.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\cmTC_fea20.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\cmTC_fea20.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\CheckSymbolExists.c(8,37): error C2065: “arc4random_uniform”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-d8uyez\\cmTC_fea20.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.51
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:273 (check_symbol_exists)"
    checks:
      - "Looking for explicit_bzero"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7t0m5i"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7t0m5i"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_EXPLICIT_BZERO"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7t0m5i'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_f89da.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:04。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\cmTC_f89da.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_f89da.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\Debug\\”。
          正在创建目录“cmTC_f89da.dir\\Debug\\cmTC_f89da.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_f89da.dir\\Debug\\cmTC_f89da.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_f89da.dir\\Debug\\cmTC_f89da.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_f89da.dir\\Debug\\\\" /Fd"cmTC_f89da.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_f89da.dir\\Debug\\\\" /Fd"cmTC_f89da.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\CheckSymbolExists.c(8,33): error C2065: “explicit_bzero”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\cmTC_f89da.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\cmTC_f89da.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\cmTC_f89da.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\CheckSymbolExists.c(8,33): error C2065: “explicit_bzero”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7t0m5i\\cmTC_f89da.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.52
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:278 (check_symbol_exists)"
    checks:
      - "Looking for getauxval"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-mjgqyj"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-mjgqyj"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_GETAUXVAL"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-mjgqyj'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_fef62.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:05。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\cmTC_fef62.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_fef62.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\Debug\\”。
          正在创建目录“cmTC_fef62.dir\\Debug\\cmTC_fef62.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_fef62.dir\\Debug\\cmTC_fef62.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_fef62.dir\\Debug\\cmTC_fef62.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_fef62.dir\\Debug\\\\" /Fd"cmTC_fef62.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_fef62.dir\\Debug\\\\" /Fd"cmTC_fef62.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “sys/auxv.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\cmTC_fef62.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\cmTC_fef62.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\cmTC_fef62.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “sys/auxv.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-mjgqyj\\cmTC_fef62.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.58
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckFunctionExists.cmake:86 (try_compile)"
      - "CMakeLists.txt:284 (check_function_exists)"
    checks:
      - "Looking for getentropy"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-bqgyed"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-bqgyed"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_GETENTROPY"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-bqgyed'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_33071.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:06。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_33071.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\Debug\\”。
          正在创建目录“cmTC_33071.dir\\Debug\\cmTC_33071.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_33071.dir\\Debug\\cmTC_33071.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_33071.dir\\Debug\\cmTC_33071.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=getentropy /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_33071.dir\\Debug\\\\" /Fd"cmTC_33071.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\CheckFunctionExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=getentropy /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_33071.dir\\Debug\\\\" /Fd"cmTC_33071.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\CheckFunctionExists.c"
          CheckFunctionExists.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\Debug\\cmTC_33071.exe" /INCREMENTAL /ILK:"cmTC_33071.dir\\Debug\\cmTC_33071.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-bqgyed/Debug/cmTC_33071.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-bqgyed/Debug/cmTC_33071.lib" /MACHINE:X64  /machine:x64 cmTC_33071.dir\\Debug\\CheckFunctionExists.obj
        CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 getentropy，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj]
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\Debug\\cmTC_33071.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj”(默认目标) (1) ->
        (Link 目标) -> 
          CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 getentropy，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj]
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\Debug\\cmTC_33071.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-bqgyed\\cmTC_33071.vcxproj]
        
            0 个警告
            2 个错误
        
        已用时间 00:00:00.97
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:289 (check_symbol_exists)"
    checks:
      - "Looking for getpagesize"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zm4r1c"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zm4r1c"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_GETPAGESIZE"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-zm4r1c'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_bb877.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:07。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\cmTC_bb877.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_bb877.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\Debug\\”。
          正在创建目录“cmTC_bb877.dir\\Debug\\cmTC_bb877.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_bb877.dir\\Debug\\cmTC_bb877.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_bb877.dir\\Debug\\cmTC_bb877.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_bb877.dir\\Debug\\\\" /Fd"cmTC_bb877.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_bb877.dir\\Debug\\\\" /Fd"cmTC_bb877.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “unistd.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\cmTC_bb877.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\cmTC_bb877.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\cmTC_bb877.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “unistd.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-zm4r1c\\cmTC_bb877.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.53
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:294 (check_symbol_exists)"
    checks:
      - "Looking for getprogname"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-aaov0n"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-aaov0n"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_GETPROGNAME"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-aaov0n'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_59ba7.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:08。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\cmTC_59ba7.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_59ba7.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\Debug\\”。
          正在创建目录“cmTC_59ba7.dir\\Debug\\cmTC_59ba7.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_59ba7.dir\\Debug\\cmTC_59ba7.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_59ba7.dir\\Debug\\cmTC_59ba7.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_59ba7.dir\\Debug\\\\" /Fd"cmTC_59ba7.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_59ba7.dir\\Debug\\\\" /Fd"cmTC_59ba7.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\CheckSymbolExists.c(8,30): error C2065: “getprogname”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\cmTC_59ba7.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\cmTC_59ba7.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\cmTC_59ba7.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\CheckSymbolExists.c(8,30): error C2065: “getprogname”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-aaov0n\\cmTC_59ba7.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.55
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:299 (check_symbol_exists)"
    checks:
      - "Looking for syslog_r"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-yooccx"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-yooccx"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_SYSLOG_R"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-yooccx'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_2acbd.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:09。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\cmTC_2acbd.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_2acbd.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\Debug\\”。
          正在创建目录“cmTC_2acbd.dir\\Debug\\cmTC_2acbd.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_2acbd.dir\\Debug\\cmTC_2acbd.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_2acbd.dir\\Debug\\cmTC_2acbd.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_2acbd.dir\\Debug\\\\" /Fd"cmTC_2acbd.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_2acbd.dir\\Debug\\\\" /Fd"cmTC_2acbd.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “syslog.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\cmTC_2acbd.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\cmTC_2acbd.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\cmTC_2acbd.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “syslog.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-yooccx\\cmTC_2acbd.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.48
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckFunctionExists.cmake:86 (try_compile)"
      - "CMakeLists.txt:305 (check_function_exists)"
    checks:
      - "Looking for syslog"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-s63m6v"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-s63m6v"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_SYSLOG"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-s63m6v'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_a2b21.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:10。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_a2b21.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\Debug\\”。
          正在创建目录“cmTC_a2b21.dir\\Debug\\cmTC_a2b21.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_a2b21.dir\\Debug\\cmTC_a2b21.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_a2b21.dir\\Debug\\cmTC_a2b21.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=syslog /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_a2b21.dir\\Debug\\\\" /Fd"cmTC_a2b21.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\CheckFunctionExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=syslog /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_a2b21.dir\\Debug\\\\" /Fd"cmTC_a2b21.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\CheckFunctionExists.c"
          CheckFunctionExists.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\Debug\\cmTC_a2b21.exe" /INCREMENTAL /ILK:"cmTC_a2b21.dir\\Debug\\cmTC_a2b21.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-s63m6v/Debug/cmTC_a2b21.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-s63m6v/Debug/cmTC_a2b21.lib" /MACHINE:X64  /machine:x64 cmTC_a2b21.dir\\Debug\\CheckFunctionExists.obj
        CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 syslog，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj]
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\Debug\\cmTC_a2b21.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj”(默认目标) (1) ->
        (Link 目标) -> 
          CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 syslog，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj]
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\Debug\\cmTC_a2b21.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-s63m6v\\cmTC_a2b21.vcxproj]
        
            0 个警告
            2 个错误
        
        已用时间 00:00:01.11
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:310 (check_symbol_exists)"
    checks:
      - "Looking for timespecsub"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-x5oz77"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-x5oz77"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_TIMESPECSUB"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-x5oz77'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_e4d36.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:11。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\cmTC_e4d36.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_e4d36.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\Debug\\”。
          正在创建目录“cmTC_e4d36.dir\\Debug\\cmTC_e4d36.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_e4d36.dir\\Debug\\cmTC_e4d36.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_e4d36.dir\\Debug\\cmTC_e4d36.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_e4d36.dir\\Debug\\\\" /Fd"cmTC_e4d36.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_e4d36.dir\\Debug\\\\" /Fd"cmTC_e4d36.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “sys/time.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\cmTC_e4d36.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\cmTC_e4d36.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\cmTC_e4d36.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\CheckSymbolExists.c(2,10): error C1083: 无法打开包括文件: “sys/time.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-x5oz77\\cmTC_e4d36.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.55
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:315 (check_symbol_exists)"
    checks:
      - "Looking for timingsafe_bcmp"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-cs6s82"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-cs6s82"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_TIMINGSAFE_BCMP"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-cs6s82'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_6fc3a.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:12。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\cmTC_6fc3a.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_6fc3a.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\Debug\\”。
          正在创建目录“cmTC_6fc3a.dir\\Debug\\cmTC_6fc3a.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_6fc3a.dir\\Debug\\cmTC_6fc3a.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_6fc3a.dir\\Debug\\cmTC_6fc3a.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_6fc3a.dir\\Debug\\\\" /Fd"cmTC_6fc3a.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_6fc3a.dir\\Debug\\\\" /Fd"cmTC_6fc3a.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\CheckSymbolExists.c(8,34): error C2065: “timingsafe_bcmp”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\cmTC_6fc3a.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\cmTC_6fc3a.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\cmTC_6fc3a.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\CheckSymbolExists.c(8,34): error C2065: “timingsafe_bcmp”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-cs6s82\\cmTC_6fc3a.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.51
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "CMakeLists.txt:320 (check_symbol_exists)"
    checks:
      - "Looking for timingsafe_memcmp"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-fg1hki"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-fg1hki"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_TIMINGSAFE_MEMCMP"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-fg1hki'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_510d1.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:13。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\cmTC_510d1.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_510d1.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\Debug\\”。
          正在创建目录“cmTC_510d1.dir\\Debug\\cmTC_510d1.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_510d1.dir\\Debug\\cmTC_510d1.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_510d1.dir\\Debug\\cmTC_510d1.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_510d1.dir\\Debug\\\\" /Fd"cmTC_510d1.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_510d1.dir\\Debug\\\\" /Fd"cmTC_510d1.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\CheckSymbolExists.c(8,36): error C2065: “timingsafe_memcmp”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\cmTC_510d1.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\cmTC_510d1.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\cmTC_510d1.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\CheckSymbolExists.c(8,36): error C2065: “timingsafe_memcmp”: 未声明的标识符 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fg1hki\\cmTC_510d1.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.48
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckFunctionExists.cmake:86 (try_compile)"
      - "CMakeLists.txt:326 (check_function_exists)"
    checks:
      - "Looking for memmem"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wb0wv6"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wb0wv6"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_MEMMEM"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wb0wv6'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_e5e74.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:13。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_e5e74.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\Debug\\”。
          正在创建目录“cmTC_e5e74.dir\\Debug\\cmTC_e5e74.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_e5e74.dir\\Debug\\cmTC_e5e74.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_e5e74.dir\\Debug\\cmTC_e5e74.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=memmem /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_e5e74.dir\\Debug\\\\" /Fd"cmTC_e5e74.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\CheckFunctionExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=memmem /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_e5e74.dir\\Debug\\\\" /Fd"cmTC_e5e74.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\CheckFunctionExists.c"
          CheckFunctionExists.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\Debug\\cmTC_e5e74.exe" /INCREMENTAL /ILK:"cmTC_e5e74.dir\\Debug\\cmTC_e5e74.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wb0wv6/Debug/cmTC_e5e74.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wb0wv6/Debug/cmTC_e5e74.lib" /MACHINE:X64  /machine:x64 cmTC_e5e74.dir\\Debug\\CheckFunctionExists.obj
        CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 memmem，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj]
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\Debug\\cmTC_e5e74.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj”(默认目标) (1) ->
        (Link 目标) -> 
          CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 memmem，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj]
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\Debug\\cmTC_e5e74.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wb0wv6\\cmTC_e5e74.vcxproj]
        
            0 个警告
            2 个错误
        
        已用时间 00:00:01.07
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFiles.cmake:132 (try_compile)"
      - "CMakeLists.txt:331 (check_include_files)"
    checks:
      - "Looking for include file endian.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wyhh0v"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wyhh0v"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_ENDIAN_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-wyhh0v'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_84f82.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:15。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\cmTC_84f82.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_84f82.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\Debug\\”。
          正在创建目录“cmTC_84f82.dir\\Debug\\cmTC_84f82.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_84f82.dir\\Debug\\cmTC_84f82.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_84f82.dir\\Debug\\cmTC_84f82.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_84f82.dir\\Debug\\\\" /Fd"cmTC_84f82.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\HAVE_ENDIAN_H.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_84f82.dir\\Debug\\\\" /Fd"cmTC_84f82.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\HAVE_ENDIAN_H.c"
          HAVE_ENDIAN_H.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\HAVE_ENDIAN_H.c(2,10): error C1083: 无法打开包括文件: “endian.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\cmTC_84f82.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\cmTC_84f82.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\cmTC_84f82.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\HAVE_ENDIAN_H.c(2,10): error C1083: 无法打开包括文件: “endian.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-wyhh0v\\cmTC_84f82.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.56
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFiles.cmake:132 (try_compile)"
      - "CMakeLists.txt:336 (check_include_files)"
    checks:
      - "Looking for include file machine/endian.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-f61ugc"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-f61ugc"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_MACHINE_ENDIAN_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-f61ugc'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_88369.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:15。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\cmTC_88369.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_88369.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\Debug\\”。
          正在创建目录“cmTC_88369.dir\\Debug\\cmTC_88369.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_88369.dir\\Debug\\cmTC_88369.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_88369.dir\\Debug\\cmTC_88369.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_88369.dir\\Debug\\\\" /Fd"cmTC_88369.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\HAVE_MACHINE_ENDIAN_H.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_88369.dir\\Debug\\\\" /Fd"cmTC_88369.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\HAVE_MACHINE_ENDIAN_H.c"
          HAVE_MACHINE_ENDIAN_H.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\HAVE_MACHINE_ENDIAN_H.c(2,10): error C1083: 无法打开包括文件: “machine/endian.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\cmTC_88369.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\cmTC_88369.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\cmTC_88369.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\HAVE_MACHINE_ENDIAN_H.c(2,10): error C1083: 无法打开包括文件: “machine/endian.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-f61ugc\\cmTC_88369.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.51
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFiles.cmake:132 (try_compile)"
      - "CMakeLists.txt:341 (check_include_files)"
    checks:
      - "Looking for include file err.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-fbpe76"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-fbpe76"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_ERR_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-fbpe76'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_61083.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:16。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\cmTC_61083.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_61083.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\Debug\\”。
          正在创建目录“cmTC_61083.dir\\Debug\\cmTC_61083.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_61083.dir\\Debug\\cmTC_61083.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_61083.dir\\Debug\\cmTC_61083.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_61083.dir\\Debug\\\\" /Fd"cmTC_61083.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\HAVE_ERR_H.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_61083.dir\\Debug\\\\" /Fd"cmTC_61083.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\HAVE_ERR_H.c"
          HAVE_ERR_H.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\HAVE_ERR_H.c(2,10): error C1083: 无法打开包括文件: “err.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\cmTC_61083.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\cmTC_61083.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\cmTC_61083.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\HAVE_ERR_H.c(2,10): error C1083: 无法打开包括文件: “err.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-fbpe76\\cmTC_61083.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.59
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFiles.cmake:132 (try_compile)"
      - "CMakeLists.txt:346 (check_include_files)"
    checks:
      - "Looking for 3 include files sys/types.h, ..., netinet/ip.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-xfd8cg"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-xfd8cg"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_NETINET_IP_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-xfd8cg'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_d0cd6.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:17。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\cmTC_d0cd6.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_d0cd6.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\Debug\\”。
          正在创建目录“cmTC_d0cd6.dir\\Debug\\cmTC_d0cd6.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_d0cd6.dir\\Debug\\cmTC_d0cd6.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_d0cd6.dir\\Debug\\cmTC_d0cd6.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d0cd6.dir\\Debug\\\\" /Fd"cmTC_d0cd6.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\HAVE_NETINET_IP_H.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d0cd6.dir\\Debug\\\\" /Fd"cmTC_d0cd6.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\HAVE_NETINET_IP_H.c"
          HAVE_NETINET_IP_H.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\HAVE_NETINET_IP_H.c(3,10): error C1083: 无法打开包括文件: “arpa/inet.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\cmTC_d0cd6.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\cmTC_d0cd6.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\cmTC_d0cd6.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\HAVE_NETINET_IP_H.c(3,10): error C1083: 无法打开包括文件: “arpa/inet.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-xfd8cg\\cmTC_d0cd6.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.54
        
      exitCode: 1
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is GNU using "--version" did not match "(GNU assembler)|(GCC)|(Free Software Foundation)":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is AppleClang using "--version" did not match "(Apple (clang|LLVM) version)":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is Clang using "--version" did not match "(clang version)":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is ARMClang using "--version" did not match "armclang":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is OrangeC using "--version" did not match "occ \\(OrangeC\\) Version":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is HP using "-V" did not match "HP C":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : -V
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is Intel using "--version" did not match "(ICC)":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is IntelLLVM using "--version" did not match "(Intel[^
      ]+oneAPI)":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : --version
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is SunPro using "-V" did not match "Sun C":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : -V
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1144 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is XL using "-qversion" did not match "XL C":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
      MASM : warning A4018:invalid command-line option : -qversion
      MASM : fatal error A1017:missing source filename
  -
    kind: "message-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineCompilerId.cmake:1131 (message)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASMCompiler.cmake:131 (CMAKE_DETERMINE_COMPILER_ID_VENDOR)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CMakeDetermineASM_MASMCompiler.cmake:17 (include)"
      - "CMakeLists.txt:404 (ENABLE_LANGUAGE)"
    message: |
      Checking whether the ASM_MASM compiler is MSVC using "-?" matched "Microsoft":
      Microsoft (R) Macro Assembler (x64) Version 14.39.33523.0
      Copyright (C) Microsoft Corporation.  All rights reserved.
      
              ML64 [ /options ] filelist [ /link linkoptions ]
      
      /Bl<linker> Use alternate linker          /Sf Generate first pass listing
      /c Assemble without linking               /Sl<width> Set line width
      /Cp Preserve case of user identifiers     /Sn Suppress symbol-table listing
      /Cx Preserve case in publics, externs     /Sp<length> Set page length
      /D<name>[=text] Define text macro         /Ss<string> Set subtitle
      /EP Output preprocessed listing to stdout /St<string> Set title
      /F <hex> Set stack size (bytes)           /Sx List false conditionals
      /Fe<file> Name executable                 /Ta<file> Assemble non-.ASM file
      /Fl[file] Generate listing                /w Same as /W0 /WX
      /Fm[file] Generate map                    /WX Treat warnings as errors
      /Fo<file> Name object file                /W<number> Set warning level
      /Fr[file] Generate limited browser info   /X Ignore INCLUDE environment path
      /FR[file] Generate full browser info      /Zd Add line number debug info
      /I<name> Add include path                 /Zf Make all symbols public
      /link <linker options and libraries>      /Zi Add symbolic debug info
      /nologo Suppress copyright message        /Zp[n] Set structure alignment
      /Sa Maximize source listing               /Zs Perform syntax check only
      /ZH:MD5 Use MD5 for checksum in debug info
      /ZH:SHA_256 Use SHA256 for checksum in debug info (default)
      /Gy[-] separate functions for linker      /quiet Suppress 'Assembling' message
      /errorReport:<option> Deprecated. Report internal assembler errors to Microsoft
          none - do not send report
          prompt - prompt to immediately send report
          queue - at next admin logon, prompt to send report
          send - send report automatically
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckFunctionExists.cmake:86 (try_compile)"
      - "CMakeLists.txt:418 (check_function_exists)"
    checks:
      - "Looking for clock_gettime"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-he43fw"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-he43fw"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_CLOCK_GETTIME"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-he43fw'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_868cf.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:19。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_868cf.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\Debug\\”。
          正在创建目录“cmTC_868cf.dir\\Debug\\cmTC_868cf.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_868cf.dir\\Debug\\cmTC_868cf.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_868cf.dir\\Debug\\cmTC_868cf.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=clock_gettime /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_868cf.dir\\Debug\\\\" /Fd"cmTC_868cf.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\CheckFunctionExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D CHECK_FUNCTION_EXISTS=clock_gettime /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_868cf.dir\\Debug\\\\" /Fd"cmTC_868cf.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\CheckFunctionExists.c"
          CheckFunctionExists.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\Debug\\cmTC_868cf.exe" /INCREMENTAL /ILK:"cmTC_868cf.dir\\Debug\\cmTC_868cf.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-he43fw/Debug/cmTC_868cf.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-he43fw/Debug/cmTC_868cf.lib" /MACHINE:X64  /machine:x64 cmTC_868cf.dir\\Debug\\CheckFunctionExists.obj
        CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 clock_gettime，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj]
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\Debug\\cmTC_868cf.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj”(默认目标) (1) ->
        (Link 目标) -> 
          CheckFunctionExists.obj : error LNK2019: 无法解析的外部符号 clock_gettime，函数 main 中引用了该符号 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj]
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\Debug\\cmTC_868cf.exe : fatal error LNK1120: 1 个无法解析的外部命令 [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-he43fw\\cmTC_868cf.vcxproj]
        
            0 个警告
            2 个错误
        
        已用时间 00:00:01.06
        
      exitCode: 1
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFile.cmake:90 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckTypeSize.cmake:250 (check_include_file)"
      - "CMakeLists.txt:424 (check_type_size)"
    checks:
      - "Looking for sys/types.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7w3mga"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7w3mga"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_SYS_TYPES_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7w3mga'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_32d6c.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:21。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\cmTC_32d6c.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_32d6c.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\Debug\\”。
          正在创建目录“cmTC_32d6c.dir\\Debug\\cmTC_32d6c.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_32d6c.dir\\Debug\\cmTC_32d6c.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_32d6c.dir\\Debug\\cmTC_32d6c.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_32d6c.dir\\Debug\\\\" /Fd"cmTC_32d6c.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\CheckIncludeFile.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_32d6c.dir\\Debug\\\\" /Fd"cmTC_32d6c.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\CheckIncludeFile.c"
          CheckIncludeFile.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\Debug\\cmTC_32d6c.exe" /INCREMENTAL /ILK:"cmTC_32d6c.dir\\Debug\\cmTC_32d6c.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7w3mga/Debug/cmTC_32d6c.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-7w3mga/Debug/cmTC_32d6c.lib" /MACHINE:X64  /machine:x64 cmTC_32d6c.dir\\Debug\\CheckIncludeFile.obj
          cmTC_32d6c.vcxproj -> C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\Debug\\cmTC_32d6c.exe
        FinalizeBuildStatus:
          正在删除文件“cmTC_32d6c.dir\\Debug\\cmTC_32d6c.tlog\\unsuccessfulbuild”。
          正在对“cmTC_32d6c.dir\\Debug\\cmTC_32d6c.tlog\\cmTC_32d6c.lastbuildstate”执行 Touch 任务。
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-7w3mga\\cmTC_32d6c.vcxproj”(默认目标)的操作。
        
        已成功生成。
            0 个警告
            0 个错误
        
        已用时间 00:00:01.11
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFile.cmake:90 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckTypeSize.cmake:251 (check_include_file)"
      - "CMakeLists.txt:424 (check_type_size)"
    checks:
      - "Looking for stdint.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-kqlxmk"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-kqlxmk"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STDINT_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-kqlxmk'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_623a2.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:22。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\cmTC_623a2.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_623a2.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\Debug\\”。
          正在创建目录“cmTC_623a2.dir\\Debug\\cmTC_623a2.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_623a2.dir\\Debug\\cmTC_623a2.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_623a2.dir\\Debug\\cmTC_623a2.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_623a2.dir\\Debug\\\\" /Fd"cmTC_623a2.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\CheckIncludeFile.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_623a2.dir\\Debug\\\\" /Fd"cmTC_623a2.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\CheckIncludeFile.c"
          CheckIncludeFile.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\Debug\\cmTC_623a2.exe" /INCREMENTAL /ILK:"cmTC_623a2.dir\\Debug\\cmTC_623a2.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-kqlxmk/Debug/cmTC_623a2.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-kqlxmk/Debug/cmTC_623a2.lib" /MACHINE:X64  /machine:x64 cmTC_623a2.dir\\Debug\\CheckIncludeFile.obj
          cmTC_623a2.vcxproj -> C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\Debug\\cmTC_623a2.exe
        FinalizeBuildStatus:
          正在删除文件“cmTC_623a2.dir\\Debug\\cmTC_623a2.tlog\\unsuccessfulbuild”。
          正在对“cmTC_623a2.dir\\Debug\\cmTC_623a2.tlog\\cmTC_623a2.lastbuildstate”执行 Touch 任务。
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-kqlxmk\\cmTC_623a2.vcxproj”(默认目标)的操作。
        
        已成功生成。
            0 个警告
            0 个错误
        
        已用时间 00:00:01.19
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckIncludeFile.cmake:90 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckTypeSize.cmake:252 (check_include_file)"
      - "CMakeLists.txt:424 (check_type_size)"
    checks:
      - "Looking for stddef.h"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n5cn10"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n5cn10"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_STDDEF_H"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n5cn10'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_d1dfa.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:24。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\cmTC_d1dfa.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_d1dfa.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\Debug\\”。
          正在创建目录“cmTC_d1dfa.dir\\Debug\\cmTC_d1dfa.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_d1dfa.dir\\Debug\\cmTC_d1dfa.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_d1dfa.dir\\Debug\\cmTC_d1dfa.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d1dfa.dir\\Debug\\\\" /Fd"cmTC_d1dfa.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\CheckIncludeFile.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_d1dfa.dir\\Debug\\\\" /Fd"cmTC_d1dfa.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\CheckIncludeFile.c"
          CheckIncludeFile.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\Debug\\cmTC_d1dfa.exe" /INCREMENTAL /ILK:"cmTC_d1dfa.dir\\Debug\\cmTC_d1dfa.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n5cn10/Debug/cmTC_d1dfa.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n5cn10/Debug/cmTC_d1dfa.lib" /MACHINE:X64  /machine:x64 cmTC_d1dfa.dir\\Debug\\CheckIncludeFile.obj
          cmTC_d1dfa.vcxproj -> C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\Debug\\cmTC_d1dfa.exe
        FinalizeBuildStatus:
          正在删除文件“cmTC_d1dfa.dir\\Debug\\cmTC_d1dfa.tlog\\unsuccessfulbuild”。
          正在对“cmTC_d1dfa.dir\\Debug\\cmTC_d1dfa.tlog\\cmTC_d1dfa.lastbuildstate”执行 Touch 任务。
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n5cn10\\cmTC_d1dfa.vcxproj”(默认目标)的操作。
        
        已成功生成。
            0 个警告
            0 个错误
        
        已用时间 00:00:01.14
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckTypeSize.cmake:146 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckTypeSize.cmake:271 (__check_type_size_impl)"
      - "CMakeLists.txt:424 (check_type_size)"
    checks:
      - "Check size of time_t"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-9ewrfz"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-9ewrfz"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_SIZEOF_TIME_T"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-9ewrfz'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_6e9d8.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:25。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\cmTC_6e9d8.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_6e9d8.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\Debug\\”。
          正在创建目录“cmTC_6e9d8.dir\\Debug\\cmTC_6e9d8.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_6e9d8.dir\\Debug\\cmTC_6e9d8.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_6e9d8.dir\\Debug\\cmTC_6e9d8.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_6e9d8.dir\\Debug\\\\" /Fd"cmTC_6e9d8.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\SIZEOF_TIME_T.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_6e9d8.dir\\Debug\\\\" /Fd"cmTC_6e9d8.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\SIZEOF_TIME_T.c"
          SIZEOF_TIME_T.c
        Link:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\link.exe /ERRORREPORT:QUEUE /OUT:"C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\Debug\\cmTC_6e9d8.exe" /INCREMENTAL /ILK:"cmTC_6e9d8.dir\\Debug\\cmTC_6e9d8.ilk" /NOLOGO kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib /MANIFEST /MANIFESTUAC:"level='asInvoker' uiAccess='false'" /manifest:embed /DEBUG /PDB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-9ewrfz/Debug/cmTC_6e9d8.pdb" /SUBSYSTEM:CONSOLE /TLBID:1 /DYNAMICBASE /NXCOMPAT /IMPLIB:"C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-9ewrfz/Debug/cmTC_6e9d8.lib" /MACHINE:X64  /machine:x64 cmTC_6e9d8.dir\\Debug\\SIZEOF_TIME_T.obj
          cmTC_6e9d8.vcxproj -> C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\Debug\\cmTC_6e9d8.exe
        FinalizeBuildStatus:
          正在删除文件“cmTC_6e9d8.dir\\Debug\\cmTC_6e9d8.tlog\\unsuccessfulbuild”。
          正在对“cmTC_6e9d8.dir\\Debug\\cmTC_6e9d8.tlog\\cmTC_6e9d8.lastbuildstate”执行 Touch 任务。
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-9ewrfz\\cmTC_6e9d8.vcxproj”(默认目标)的操作。
        
        已成功生成。
            0 个警告
            0 个错误
        
        已用时间 00:00:01.14
        
      exitCode: 0
  -
    kind: "try_compile-v1"
    backtrace:
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:140 (try_compile)"
      - "C:/Program Files/Microsoft Visual Studio/2022/Community/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.28/Modules/CheckSymbolExists.cmake:66 (__CHECK_SYMBOL_EXISTS_IMPL)"
      - "tests/CMakeLists.txt:696 (check_symbol_exists)"
    checks:
      - "Looking for pipe2"
    directories:
      source: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n70idz"
      binary: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n70idz"
    cmakeVariables:
      CMAKE_C_FLAGS: "/DWIN32 /D_WINDOWS -MP -W4  -wd4018 -wd4057 -wd4100 -wd4127 -wd4146 -wd4244 -wd4245 -wd4267 -wd4389 -wd4706 -wd4996"
      CMAKE_C_FLAGS_DEBUG: "/Zi /Ob0 /Od /RTC1"
      CMAKE_EXE_LINKER_FLAGS: "/machine:x64"
      CMAKE_MODULE_PATH: "C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0"
      CMAKE_POSITION_INDEPENDENT_CODE: "true"
    buildResult:
      variable: "HAVE_PIPE2"
      cached: true
      stdout: |
        Change Dir: 'C:/Users/29478/source/repos/cpp/boost_test/third-party/libressl-4.0.0/build/CMakeFiles/CMakeScratch/TryCompile-n70idz'
        
        Run Build Command(s): "C:/Program Files/Microsoft Visual Studio/2022/Community/MSBuild/Current/Bin/amd64/MSBuild.exe" cmTC_c0429.vcxproj /p:Configuration=Debug /p:Platform=x64 /p:VisualStudioVersion=17.0 /v:n
        适用于 .NET Framework MSBuild 版本 17.9.8+b34f75857
        生成启动时间为 2025/1/11 13:01:26。
        
        节点 1 上的项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\cmTC_c0429.vcxproj”(默认目标)。
        PrepareForBuild:
          正在创建目录“cmTC_c0429.dir\\Debug\\”。
          已启用结构化输出。编译器诊断的格式设置将反映错误层次结构。有关详细信息，请参阅 https://aka.ms/cpp/structured-output。
          正在创建目录“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\Debug\\”。
          正在创建目录“cmTC_c0429.dir\\Debug\\cmTC_c0429.tlog\\”。
        InitializeBuildStatus:
          正在创建“cmTC_c0429.dir\\Debug\\cmTC_c0429.tlog\\unsuccessfulbuild”，因为已指定“AlwaysCreate”。
          正在对“cmTC_c0429.dir\\Debug\\cmTC_c0429.tlog\\unsuccessfulbuild”执行 Touch 任务。
        ClCompile:
          C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.39.33519\\bin\\HostX64\\x64\\CL.exe /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_c0429.dir\\Debug\\\\" /Fd"cmTC_c0429.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\CheckSymbolExists.c"
          用于 x64 的 Microsoft (R) C/C++ 优化编译器 19.39.33523 版
          版权所有(C) Microsoft Corporation。保留所有权利。
          cl /c /Zi /W4 /WX- /diagnostics:column /MP /Od /Ob0 /D _MBCS /D WIN32 /D _WINDOWS /D "CMAKE_INTDIR=\\"Debug\\"" /Gm- /RTC1 /MDd /GS /fp:precise /Zc:wchar_t /Zc:forScope /Zc:inline /Fo"cmTC_c0429.dir\\Debug\\\\" /Fd"cmTC_c0429.dir\\Debug\\vc143.pdb" /external:W4 /Gd /TC /wd4018 /wd4057 /wd4100 /wd4127 /wd4146 /wd4244 /wd4245 /wd4267 /wd4389 /wd4706 /wd4996 /errorReport:queue "C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\CheckSymbolExists.c"
          CheckSymbolExists.c
        C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\CheckSymbolExists.c(3,10): error C1083: 无法打开包括文件: “unistd.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\cmTC_c0429.vcxproj]
        已完成生成项目“C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\cmTC_c0429.vcxproj”(默认目标)的操作 - 失败。
        
        生成失败。
        
        “C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\cmTC_c0429.vcxproj”(默认目标) (1) ->
        (ClCompile 目标) -> 
          C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\CheckSymbolExists.c(3,10): error C1083: 无法打开包括文件: “unistd.h”: No such file or directory [C:\\Users\\29478\\source\\repos\\cpp\\boost_test\\third-party\\libressl-4.0.0\\build\\CMakeFiles\\CMakeScratch\\TryCompile-n70idz\\cmTC_c0429.vcxproj]
        
            0 个警告
            1 个错误
        
        已用时间 00:00:00.51
        
      exitCode: 1
...
